import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}

        <footer className="mt-10 w-full border-t border-gray-200 py-6 text-center text-sm text-gray-500">
            <p>Todos os direitos reservados</p>
            <p>Gabriel Marcolin</p>
            <p>2025</p>
        </footer>
      </body>
    </html>
  );
}



/*Posteriormente, quando fizermos a integração, trocar para:




"use client";

import { Geist, Geist_Mono } from "next/font/google";
import { useEffect, useState } from "react";
import { usePathname, useRouter } from "next/navigation";
import "./globals.css";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export default function RootLayout({
                                       children,
                                   }: Readonly<{
    children: React.ReactNode;
}>) {
    const router = useRouter();
    const pathname = usePathname();
    const [usuarioLogado, setUsuarioLogado] = useState<any>(null);

    useEffect(() => {
        const userData = localStorage.getItem("usuarioLogado");

        if (!userData && pathname !== "/login") {
            router.push("/login");
        } else if (userData) {
            setUsuarioLogado(JSON.parse(userData));
        }
    }, [pathname, router]);

    if (!usuarioLogado && pathname !== "/login") {
        return null;
    }

    return (
        <html lang="en">
        <body className={${geistSans.variable} ${geistMono.variable} antialiased}>
        {children}
        </body>
        </html>
    );
}
* */